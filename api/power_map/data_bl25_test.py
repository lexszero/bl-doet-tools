import re
from typing import Iterable

from power_map.data_bl25 import PowerGrid_BL25
from power_map.placement import PlacementEntityFeature, PlacementEntityProperties
from power_map.power_grid_base import PowerGridItemSize
from power_map.utils import log

class PowerGrid_BL25_Test(PowerGrid_BL25):
    OFFLINE = False

    KML_URL = 'http://www.google.com/maps/d/kml?forcekml=1&mid=18ttaWJe3AVcVMuF4xWxHvII5Xhp0CUE'
    #KML_FILENAME = os.path.dirname(__file__)+'/data/bl25_grid.kml'

    def placement_features(self) -> Iterable[PlacementEntityFeature]:
        idx = 1000
        for item in self._kml_folders['Placement'].features:
            m = re.search(r'id=(\d+)', item.description or "")
            if m:
                item_id = m[1]
            else:
                log.warning(f"placement entity {item.name} is missing id, assigning autogenerated")
                item_id = f"_{idx}"
                idx += 1

            m = re.search(r'powerNeed=(\d+)', item.description or "")
            if m:
                power_need=int(m[1])
            else:
                power_need=-1
            yield PlacementEntityFeature(
                    type='Feature',
                    id=item_id,
                    geometry=item.geometry.__geo_interface__,
                    properties=PlacementEntityProperties.model_validate({
                        'name': item.name,
                        'powerNeed': power_need
                        })
                    )

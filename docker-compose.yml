services:
  postgres:
    image: postgres:17-alpine
    restart: always
    env_file: .env
    ports:
      - 5432:5432
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - db-data:/var/lib/postgresql/data:cached
      - ./api/init_db.sh:/docker-entrypoint-initdb.d/init_db.sh

#  backend:
#    build:
#      context: backend
#      dockerfile: Dockerfile
#    command: python app/main.py
#    tty: true
#    volumes:
#      - ./backend:/backend/:cached
#      - ./.docker/.ipython:/root/.ipython:cached
#    environment:
#      PYTHONPATH: .
#      DATABASE_URL: "postgresql+asyncpg://dev-user:password@postgres:5432/dev_db"
#    depends_on:
#      - "postgres"
#    ports:
#      - 8000:8000
#
#  frontend:
#    build:
#      context: frontend
#      dockerfile: Dockerfile
#    stdin_open: true
#    volumes:
#      - "./frontend:/app:cached"
#      - "./frontend/node_modules:/app/node_modules:cached"
#    environment:
#      - NODE_ENV=development
#    ports:
#      - 3000:3000

volumes:
  db-data:

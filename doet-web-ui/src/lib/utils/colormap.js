
const _ColorMaps = {
  'plasma': [
    [0.050383, 0.029803, 0.527975],
    [0.274191, 0.012109, 0.622722],
    [0.447714, 0.00208, 0.66024],
    [0.610667, 0.090204, 0.619951],
    [0.740143, 0.213864, 0.524216],
    [0.846788, 0.342551, 0.420579],
    [0.928329, 0.472975, 0.326067],
    [0.983041, 0.624131, 0.227937],
    [0.991209, 0.790537, 0.149377],
    [0.940015, 0.975158, 0.131326],
  ],
  'winter': [
    [0.0, 0.0, 1.0],
    [0.0, 0.10980392156862745, 0.9450980392156862],
    [0.0, 0.2196078431372549, 0.8901960784313725],
    [0.0, 0.3333333333333333, 0.8333333333333334],
    [0.0, 0.44313725490196076, 0.7784313725490196],
    [0.0, 0.5568627450980392, 0.7215686274509804],
    [0.0, 0.6666666666666666, 0.6666666666666667],
    [0.0, 0.7803921568627451, 0.6098039215686275],
    [0.0, 0.8901960784313725, 0.5549019607843138],
    [0.0, 1.0, 0.5],
  ],
  'inferno': [
    [0.001462, 0.000466, 0.013866],
    [0.104551, 0.047008, 0.25343],
    [0.290763, 0.045644, 0.418637],
    [0.472328, 0.110547, 0.428334],
    [0.64626, 0.173914, 0.378359],
    [0.812239, 0.266786, 0.274661],
    [0.929644, 0.411479, 0.145367],
    [0.985315, 0.608422, 0.024202],
    [0.969783, 0.820825, 0.238686],
    [0.988362, 0.998364, 0.644924],
  ],

};

export function colormap(map, value, min=0, max=1.0, inverted=false) {
  function componentToHex(c) {
    let hex = Math.round(c*255).toString(16);
    return hex.length == 1 ? "0"+hex : hex;
  }

  const colors = _ColorMaps[map];
  //clamp
  value = (value < min) ? min : (value > max) ? max : value;
  //normalize
  value = (value - min)/(max - min);
  if (inverted) {
    value = 1.0 - value;
  }

  const vn = value * (colors.length-1);
  const vd = vn - Math.floor(vn);
  const c1 = colors[Math.floor(vn)];
  const c2 = colors[Math.ceil(vn)];
  if (!c1 || !c2) {
    console.log(value, vn, vd);
    return '#FF0000';
  }
  let result = '#';
  for (let i = 0; i < 3; i++) {
    result += componentToHex(c1[i] + (c2[i] - c1[i])*vd);
  }
  return result;
}

export default colormap;

